-- MySQL Script generated by MySQL Workbench
-- Thu Nov 28 22:29:40 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema fsraiDatabase
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `fsraiDatabase` ;

-- -----------------------------------------------------
-- Schema fsraiDatabase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fsraiDatabase` DEFAULT CHARACTER SET utf8 ;
USE `fsraiDatabase` ;

-- -----------------------------------------------------
-- Table `fsraiDatabase`.`ROLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`ROLE` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`ROLE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `NAME` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`));


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`ACCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`ACCOUNT` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`ACCOUNT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `EMAIL` VARCHAR(50) NOT NULL,
  `PASSWORD` VARCHAR(45) NOT NULL,
  `ROLE_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_ACCOUNT_ROLE_idx` (`ROLE_ID` ASC),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC),
  CONSTRAINT `fk_ACCOUNT_ROLE`
    FOREIGN KEY (`ROLE_ID`)
    REFERENCES `fsraiDatabase`.`ROLE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`MEMBER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`MEMBER` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`MEMBER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `FRONTNAME` VARCHAR(45) NOT NULL,
  `REARNAME` VARCHAR(45) NOT NULL,
  `DATE_OF_BIRTH` VARCHAR(45) NOT NULL,
  `DESCRIPTION` VARCHAR(45) NULL,
  `PICTURE` VARCHAR(45) NULL,
  `ACCOUNT_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_MEMBER_ACCOUNT1_idx` (`ACCOUNT_ID` ASC),
  CONSTRAINT `fk_MEMBER_ACCOUNT1`
    FOREIGN KEY (`ACCOUNT_ID`)
    REFERENCES `fsraiDatabase`.`ACCOUNT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`FUNCTION_FSR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`FUNCTION_FSR` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`FUNCTION_FSR` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `NAME` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`));


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`MEMBER_HISTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`MEMBER_HISTORY` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`MEMBER_HISTORY` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `START_DATE` VARCHAR(45) NOT NULL,
  `END_DATE` VARCHAR(45) NULL,
  `MEMBER_ID` INT NOT NULL,
  `FUNCTION_FSR_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_MEMBER_HISTORY_MEMBER1_idx` (`MEMBER_ID` ASC),
  INDEX `fk_MEMBER_HISTORY_FUNCTION_FSR1_idx` (`FUNCTION_FSR_ID` ASC),
  CONSTRAINT `fk_MEMBER_HISTORY_MEMBER1`
    FOREIGN KEY (`MEMBER_ID`)
    REFERENCES `fsraiDatabase`.`MEMBER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEMBER_HISTORY_FUNCTION_FSR1`
    FOREIGN KEY (`FUNCTION_FSR_ID`)
    REFERENCES `fsraiDatabase`.`FUNCTION_FSR` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`LOCATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`LOCATION` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`LOCATION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `STREET` VARCHAR(45) NOT NULL,
  `NUMBER` VARCHAR(45) NOT NULL,
  `ZIPCODE` VARCHAR(45) NOT NULL,
  `CITY` VARCHAR(45) NOT NULL,
  `ROOM` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`));


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`EVENTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`EVENTS` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`EVENTS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `NAME` VARCHAR(45) NOT NULL,
  `DATE` VARCHAR(45) NOT NULL,
  `DESCRIPTION` VARCHAR(45) NOT NULL,
  `PICTURE` VARCHAR(45) NULL,
  `LOCATION_ID` INT NOT NULL,
  `CREATED_FROM` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_EVENTS_LOCATION1_idx` (`LOCATION_ID` ASC),
  INDEX `fk_EVENTS_MEMBER1_idx` (`CREATED_FROM` ASC),
  CONSTRAINT `fk_EVENTS_LOCATION1`
    FOREIGN KEY (`LOCATION_ID`)
    REFERENCES `fsraiDatabase`.`LOCATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EVENTS_MEMBER1`
    FOREIGN KEY (`CREATED_FROM`)
    REFERENCES `fsraiDatabase`.`MEMBER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `fsraiDatabase`.`REGISTRATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fsraiDatabase`.`REGISTRATION` ;

CREATE TABLE IF NOT EXISTS `fsraiDatabase`.`REGISTRATION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  `FRONTNAME` VARCHAR(45) NOT NULL,
  `REARNAME` VARCHAR(45) NOT NULL,
  `EMAIL` VARCHAR(45) NOT NULL,
  `COMMENT` VARCHAR(45) NULL,
  `isValid` TINYINT NOT NULL DEFAULT 0,
  `EVENTS_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_REGISTRATION_EVENTS1_idx` (`EVENTS_ID` ASC),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC),
  CONSTRAINT `fk_REGISTRATION_EVENTS1`
    FOREIGN KEY (`EVENTS_ID`)
    REFERENCES `fsraiDatabase`.`EVENTS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`ROLE`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`ROLE` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (1, DEFAULT, NULL, 'Admin');
INSERT INTO `fsraiDatabase`.`ROLE` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (2, DEFAULT, NULL, 'Mitglied');
INSERT INTO `fsraiDatabase`.`ROLE` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (3, DEFAULT, NULL, 'Nutzer');

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`ACCOUNT`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`ACCOUNT` (`ID`, `CREATED_AT`, `UPDATED_AT`, `EMAIL`, `PASSWORD`, `ROLE_ID`) VALUES (1, DEFAULT, NULL, 'danny.steinbrecher@fh-erfurt.de', '1232456', 1);
INSERT INTO `fsraiDatabase`.`ACCOUNT` (`ID`, `CREATED_AT`, `UPDATED_AT`, `EMAIL`, `PASSWORD`, `ROLE_ID`) VALUES (2, DEFAULT, NULL, 'niclas.jarowsky@fh-erfurt.de', '123456', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`MEMBER`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`MEMBER` (`ID`, `CREATED_AT`, `UPDATED_AT`, `FRONTNAME`, `REARNAME`, `DATE_OF_BIRTH`, `DESCRIPTION`, `PICTURE`, `ACCOUNT_ID`) VALUES (1, DEFAULT, NULL, 'Danny', 'Steinbrecher', '24.12.1989', 'Das ist die Beschreibung von Danny', NULL, 1);
INSERT INTO `fsraiDatabase`.`MEMBER` (`ID`, `CREATED_AT`, `UPDATED_AT`, `FRONTNAME`, `REARNAME`, `DATE_OF_BIRTH`, `DESCRIPTION`, `PICTURE`, `ACCOUNT_ID`) VALUES (2, DEFAULT, NULL, 'Niclas', 'Jarowsky', '25.12.1989', 'Das ist die Beschreibung von Niclas', NULL, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`FUNCTION_FSR`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (1, DEFAULT, NULL, 'Sprecher');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (2, DEFAULT, NULL, 'stellv. Sprecher');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (3, DEFAULT, NULL, 'Finanzer');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (4, DEFAULT, NULL, 'stellv. Finanzer');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (5, DEFAULT, NULL, 'Mitglied');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (6, DEFAULT, NULL, 'inaktives Mitglied');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (7, DEFAULT, NULL, 'Social Media');
INSERT INTO `fsraiDatabase`.`FUNCTION_FSR` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`) VALUES (8, DEFAULT, NULL, 'Lagerverwalter');

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`MEMBER_HISTORY`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`MEMBER_HISTORY` (`ID`, `CREATED_AT`, `UPDATED_AT`, `START_DATE`, `END_DATE`, `MEMBER_ID`, `FUNCTION_FSR_ID`) VALUES (1, DEFAULT, NULL, '10.3.2019', NULL, 1, 1);
INSERT INTO `fsraiDatabase`.`MEMBER_HISTORY` (`ID`, `CREATED_AT`, `UPDATED_AT`, `START_DATE`, `END_DATE`, `MEMBER_ID`, `FUNCTION_FSR_ID`) VALUES (2, DEFAULT, NULL, '10.3.2019', NULL, 2, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`LOCATION`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`LOCATION` (`ID`, `CREATED_AT`, `UPDATED_AT`, `STREET`, `NUMBER`, `ZIPCODE`, `CITY`, `ROOM`) VALUES (1, DEFAULT, NULL, 'Altonaer Straße', '25', '99085', 'Erfurt', '3.1..23');
INSERT INTO `fsraiDatabase`.`LOCATION` (`ID`, `CREATED_AT`, `UPDATED_AT`, `STREET`, `NUMBER`, `ZIPCODE`, `CITY`, `ROOM`) VALUES (2, DEFAULT, NULL, 'Leipziger Straße', '16', '99086', 'Erfurt', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`EVENTS`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`EVENTS` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`, `DATE`, `DESCRIPTION`, `PICTURE`, `LOCATION_ID`, `CREATED_FROM`) VALUES (1, DEFAULT, NULL, 'HYE 2019', '15.11.2019', 'Das war ein geiles Event', NULL, 1, 1);
INSERT INTO `fsraiDatabase`.`EVENTS` (`ID`, `CREATED_AT`, `UPDATED_AT`, `NAME`, `DATE`, `DESCRIPTION`, `PICTURE`, `LOCATION_ID`, `CREATED_FROM`) VALUES (2, DEFAULT, NULL, 'Wintermarkt', '11.12.2019', 'Wintermarkt wird cool!', NULL, 1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `fsraiDatabase`.`REGISTRATION`
-- -----------------------------------------------------
START TRANSACTION;
USE `fsraiDatabase`;
INSERT INTO `fsraiDatabase`.`REGISTRATION` (`ID`, `CREATED_AT`, `UPDATED_AT`, `FRONTNAME`, `REARNAME`, `EMAIL`, `COMMENT`, `isValid`, `EVENTS_ID`) VALUES (1, DEFAULT, NULL, 'Hans', 'Peter', 'hans.peter@irgendeinemailadresse.de', 'Das ist ein krasser Kommentar', 1, 1);
INSERT INTO `fsraiDatabase`.`REGISTRATION` (`ID`, `CREATED_AT`, `UPDATED_AT`, `FRONTNAME`, `REARNAME`, `EMAIL`, `COMMENT`, `isValid`, `EVENTS_ID`) VALUES (2, DEFAULT, NULL, 'Jochen', 'der Knochen', 'jochen@spammail.de', 'Kein Kommentar', 0, 1);

COMMIT;

